{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","defaultProps","Task","props","date","Date","task","day","getDate","getMonth","getUTCFullYear","toUpperCase","slice","reminder","onDoubleClick","onToggle","id","onDelete","cursor","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","showAddTask","setShowAddTask","addTask","newTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a074c53.chunk.js","sourcesContent":["const Button = ({color, text, onClick}) => {\n    return <button onClick={onClick} style={{backgroundColor: color}} className=\"btn\">{text}</button>\n}\n\nexport default Button;","import Button from \"./Button\";\n\nconst Header = ({title, onAdd, showAdd}) => {\n    return(\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Button onClick={onAdd} color={showAdd ? \"red\" : \"green\"} text={showAdd ? 'Close' : 'Add'}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Todo Tracker'\n}\n\n// const styling = {\n//     color: 'red',\n//     backgroundColor: 'blue',\n// }\n\nexport default Header","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = (props) => {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    let date = new Date(props.task.day);\n    date = `${date.getDate()}  ${monthNames[date.getMonth()]}, ${date.getUTCFullYear()}`;\n\n    let text = props.task.text;\n    text = text[0].toUpperCase() + text.slice(1);\n\n  return (\n    <div\n      className={props.task.reminder ? \"task reminder\" : \"task\"}\n      onDoubleClick={() => props.onToggle(props.task.id)}\n    >\n      <h3>\n        {props.task.id}. &nbsp; {text}\n        <FaTimes\n          onClick={() => props.onDelete(props.task.id)}\n          style={{ color: \"red\", cursor: \"pointer\" }}\n        />\n      </h3>\n      <p className=\"date\">Date: &nbsp; {date}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from './Task';\n\nconst Tasks = (props) => {\n    return (\n        <>\n            {props.tasks.map((task, index) => (\n                <Task key={index} task={task} onDelete={props.onDelete} onToggle={props.onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks;","import { useState } from \"react\";\n\nconst AddTask = (props) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(!text){\n            alert(\"Please Add a task\")\n            return\n        }\n        if(!day){\n            alert(\"Please Add Date\")\n            return\n        }\n\n        props.onAdd({text, day, reminder});\n\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)}></input>\n            </div>\n            <div className=\"form-control\">\n                <label>Date</label>\n                <input type=\"date\" placeholder=\"Add Day & Time\" value={day} onChange={(e) => setDay(e.target.value)}></input>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\n            </div>\n            <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\"></input>\n        </form>\n    )\n}\n\nexport default AddTask;","import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  }, [])\n\n\n// Fetch Task from server\nconst fetchTasks = async () => {\n  const res = await fetch(\"http://localhost:5000/tasks\");\n  const data = await res.json();\n\n  return data;\n}\n\n//Fetch task singular\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json();\n\n  return data;\n}\n\n// Toggle Add task function\nconst [showAddTask, setShowAddTask] = useState(false);\n\n// Add Task function\nconst addTask = async (task) => {\n  const newTask = {...task};\n  setTasks([...tasks, newTask]);\n  const res = await fetch(`http://localhost:5000/tasks`, \n    {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n  return res;\n}\n\n// Delete Task function\nconst deleteTask = async (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n}\n\n// Toggle Reminder Function\nconst toggleReminder = async (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder } : task))\n\n  const taskToToggle = await fetchTask(id);\n  const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder};\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updateTask)\n  })\n  return res;\n}\n\n  return (\n    <div className=\"container\">\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask ? <AddTask onAdd={addTask}/> : \"\"}\n     {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : \"No tasks to show!\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}